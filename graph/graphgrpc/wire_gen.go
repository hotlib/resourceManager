// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package graphgrpc

import (
	"database/sql"
	"github.com/marosmars/resourceManager/actions/executor"
	"github.com/marosmars/resourceManager/log"
	"github.com/marosmars/resourceManager/viewer"
	"google.golang.org/grpc"
)

// Injectors from wire.go:

func NewServer(cfg Config) (*grpc.Server, func(), error) {
	tenancy := cfg.Tenancy
	db := cfg.DB
	logger := cfg.Logger
	registry := newActionsRegistry()
	server, cleanup, err := newServer(tenancy, db, logger, registry)
	if err != nil {
		return nil, nil, err
	}
	return server, func() {
		cleanup()
	}, nil
}

// wire.go:

// Config defines the grpc server config.
type Config struct {
	DB      *sql.DB
	Logger  log.Logger
	Tenancy viewer.Tenancy
}

func newActionsRegistry() *executor.Registry {
	registry := executor.NewRegistry()
	return registry
}
