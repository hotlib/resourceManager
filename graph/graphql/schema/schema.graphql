directive @goModel(model: String, models: [String!]) on OBJECT
    | INPUT_OBJECT
    | SCALAR
    | ENUM
    | INTERFACE
    | UNION

#input ResourceTag
#@goModel(model: "github.com/marosmars/resourceManager/pools.ResourceTag")
#{
#    ResourceTag: String!
#}
#
#type ResoucePool
#@goModel(model: "github.com/marosmars/resourceManager/ent.ResourcePool")
#{
#    ID: Int!
#}
#
#type Property
#@goModel(model: "github.com/marosmars/resourceManager/ent.Property")
#{
#   ID: Int!
#   property_type: Int!
#}
#
#type ResourceEdges
#@goModel(model: "github.com/marosmars/resourceManager/ent.ResourceEdges")
#{
#    Pool: ResoucePool
#    Properties: [Property]
#}

scalar Map

type Resource
@goModel(model: "github.com/marosmars/resourceManager/ent.Resource")
{
    ID: Int!
}

type Query {
    QueryResource(input: Map!, poolName: String!): Resource!
    QueryResources(poolName: String!): [Resource]!
}

type Mutation {
    ClaimResource(poolName: String!): Resource!
    FreeResource(input: Map!, poolName: String!): String!
}